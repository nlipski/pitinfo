version: '3.8'

services:
  redis:
    image: redis:6-alpine

  db:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_pitinfo_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080


# Main application compose section
  web:
    image: web:latest
    build:
      context: ${PWD}
      dockerfile: docker/dockerfiles/web/Dockerfile.development
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}

      APPLICATION_DB: ${APPLICATION_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: "db_rma_dev"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}

      SECRET_KEY: ${SECRET_KEY}
      MAPBOX_TOKEN: ${MAPBOX_TOKEN}

      MAIL_SERVER: ${MAIL_SERVER}
      MAIL_DEBUG: ${MAIL_DEBUG}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USE_TLS: ${MAIL_USE_TLS}
      MAIL_USE_SSL: ${MAIL_USE_SSL}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_DEFAULT_SENDER: ${MAIL_DEFAULT_SENDER}

      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}


    command: gunicorn -w 1 -b 0.0.0.0 wsgi:app
    volumes:
      - ${PWD}:/opt/code
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db




volumes:
  pg_pitinfo_data: